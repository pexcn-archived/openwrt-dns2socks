#!/bin/sh /etc/rc.common
#
# Copyright (C) 2020 pexcn <i@pexcn.me>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=90

USE_PROCD=1
#PROCD_DEBUG=1

append_value() {
	local section="$1"
	local option="$2"
	local default="$3"
	local _loctmp
	config_get _loctmp "$section" "$option" "$default"
	[ -n "$_loctmp" ] || return 0
	procd_append_param command "$_loctmp"
}

append_bool() {
	local section="$1"
	local option="$2"
	local value="$3"
	local default="$4"
	local _loctmp
	config_get_bool _loctmp "$section" "$option" "$default"
	[ "$_loctmp" = 1 ] || return 0
	procd_append_param command "$value"
}

append_param_with_separator() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local separator="$4"
	local default="$5"
	local _loctmp
	config_get _loctmp "$section" "$option" "$default"
	[ -n "$_loctmp" ] || return 0
	procd_append_param command "$switch$separator$_loctmp"
}

start_dns2socks() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"
	procd_set_param command /usr/bin/dns2socks

	# main
	append_value $1 proxy_server "127.0.0.1:1080"
	append_value $1 dns_server "8.8.8.8:53"
	append_value $1 local_server "127.0.0.1:5300"

	# misc
	append_bool $1 use_http_proxy "-t"
	append_bool $1 disable_cache "-d"

	# auth
	local use_http_proxy_val
	config_get_bool use_http_proxy_val $1 use_http_proxy
	[ "$use_http_proxy_val" = 1 ] || {
		append_param_with_separator $1 auth_username "-u" ":"
		append_param_with_separator $1 auth_password "-p" ":"
	}

	# edns
	local force_edns_val
	config_get_bool force_edns_val $1 force_edns
	local edns_mode="-e"
	[ "$force_edns_val" = 1 ] && edns_mode="-ef"
	append_param_with_separator $1 edns_client_subnet "$edns_mode" ":"

	procd_append_param command "-q"

	procd_close_instance
}

start_service() {
	config_load dns2socks
	config_foreach start_dns2socks dns2socks
}
